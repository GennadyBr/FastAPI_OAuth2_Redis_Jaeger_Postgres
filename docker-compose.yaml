version: '3'


services:
  db_users:
    container_name: db_users
    image: postgres:13
    environment:
      POSTGRES_DB: ${PG_DB_NAME}
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"

  db_movies:
    container_name: db_movies
    image: postgres:13
    environment:
    - POSTGRES_DB=movies_database
    - POSTGRES_USER=app
    - POSTGRES_PASSWORD=123qwe
    volumes:
      - postgres_movies:/var/lib/postgresql/data/
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"

  redis_token:
    container_name: redis_token
    image: redis:7.2-rc2
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    restart: on-failure
    env_file:
      - .env

  auth_app:
    container_name: auth_app
    build: .
    env_file:
      - .env
    depends_on:
      - redis_token
      - db_users
      - db_movies
    ports:
      - "8081:8081"

  nginx:
    container_name: nginx
    image: nginx:1.25.1-alpine
    depends_on:
      - auth_app
      - admin_panel
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx:/etc/nginx/conf.d:ro

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.48
    ports:
      - "${JEAGER_PORT_UDP}/udp"
      - "${JEAGER_PORT_TCP}/tcp"
    depends_on:
      - auth_app
      - nginx

  admin_panel:
    container_name: admin_panel
    image: gennadybr/admin_web_static:1.1
    ports:
      - "8000:8000"
    depends_on:
      - auth_app
      - db_users
      - db_movies
    env_file:
      - .env

volumes:
  postgres_data:
  postgres_movies:
